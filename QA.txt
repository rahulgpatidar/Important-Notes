Selenium- jason Huggins - Thoghtwork - 2004
WebDriver- Simon Stewart- Google - 2006
Selenium WebDriver - 2008

Selenium - have 4 flavour/tool- IDE, RC, WebDriver, Grid

Because of the Javascript injection to the browser and because of security reason RC is depricated officially, most of the browser are not allowning JS injection to thier sites, So Webdriver came into picture.

Selenium RC - API
Selenium WebDriver - API,well-designed object-oriented API ,Selenium-WebDriver makes direct calls to the browser using each browser’s native support for automation. Again, it drives the browser directly using the browser’s built in support for automation.

Selenium 2(WebDriver) still runs Selenium 1’s( Selenium RC) interface for backwards compatibility.

Selenium IDE -(Integrated Development Environment) is a prototyping tool for building test scripts. It is a Firefox plugin and provides an easy-to-use interface for developing automated tests. Selenium IDE has a recording feature, which records user actions as they are performed and then exports them as a reusable script in one of many programming languages that can be later executed.

Even though Selenium IDE has a “Save” feature that allows users to keep the tests in a table-based format for later import and execution, it is not designed to run your test passes nor is it designed to build all the automated tests you will need. Specifically, Selenium IDE doesn’t provide iteration or conditional statements for test scripts

Selenium Grid- Selenium Grid allows you to run your tests in parallel, that is, different tests can be run at the same time on different remote machines. Improve the Performance and reduce the Time for execution.

WebDriver and the Selenium-Server
You may, or may not, need the Selenium Server, depending on how you intend to use Selenium-WebDriver. If your browser and tests will all run on the same machine, and your tests only use the WebDriver API, then you do not need to run the Selenium-Server; WebDriver will run the browser directly.

There are some reasons though to use the Selenium-Server with Selenium-WebDriver.

You are using Selenium-Grid to distribute your tests over multiple machines or virtual machines (VMs).
You want to connect to a remote machine that has a particular browser version that is not on your current machine.
You are not using the Java bindings (i.e. Python, C#, or Ruby) and would like to use HtmlUnit Driver


HtmlUnit Driver
This is currently the fastest and most lightweight implementation of WebDriver. As the name suggests, this is based on HtmlUnit. HtmlUnit is a java based implementation of a WebBrowser without a GUI. For any language binding (other than java) the Selenium Server is required to use this driver.


WARNING: Do not mix implicit and explicit waits. Doing so can cause unpredictable wait times. For example setting an implicit wait of 10 seconds and an explicit wait of 15 seconds, could cause a timeout to occur after 20 seconds.WebDriverWait by default calls the ExpectedCondition every 500 milliseconds until it returns successfully. A successful return value for the ExpectedCondition function type is a Boolean value of true, or a non-null object.

Implicit Waits
An implicit wait is to tell WebDriver to poll the DOM for a certain amount of time when trying to find an element or elements if they are not immediately available. The default setting is 0. Once set, the implicit wait is set for the life of the WebDriver object instance.


When you are working with Chrome Browser or IE browser you need to set the property otherwise will get illegalStateException

public static void main(String[] args) {
		System.setProperty("webdriver.chrome.driver", "E:\\Selenium_Driver\\chromedriver.exe");
		WebDriver driver=new ChromeDriver();
		driver.get("https://www.ebay.in/");
	}
--------------------------------------------------------------------------------------------------------------------------------------------

When you are working with IE Browser you need to set property otherwise will get illegalStateException

public static void main(String[] args) {
		System.setProperty("webdriver.ie.driver", "E:\\IEDriverServer.exe");
		WebDriver driver=new InternetExplorerDriver();
		driver.get("https://www.ebay.in/");
	}

and when working with IE browser - 
-Zoom level should be=100%  else SessionNotFoundException will appear	
-Protected mode should be same for all -otherwise SessionNotFoundException will appear	
-xpath changes in IE
-sendkeys performance (64 bit version is worst for IE dont use- it will type character very very slow-sendkeys perfomace will worst for it)

for the geckodriver also we need to set the property like IE and chrome (working with selenium 3 - than we need gecko driver else not needed)
--------------------------------------------------------------------------------------------------------------------------------------------

how to solve not connected exception- only will get in Firefox (stable -means properly tested and 2nd is Beta-still testing is going)
for avoid this issue-
-use selenium latest JARS
-use Firefox stable version

--------------------------------------------------------------------------------------------------------------------------------------------
whenever website is Dynamic- go with XPATH or CSS

diffrence b/w CSS and XPATH
-CSS is faster and the reason is in XPATH-XPATH engine is evaluate your XPATH and locate element but CSS does not have any engine and it direclty identify an object
-CSS will not change with Browser but XPATH may change in IE
--------------------------------------------------------------------------------------------------------------------------------------------
how can we find CSS
1.  tagname[attribute='value']
2.  tagname[attribute='value'][attribute2='value2']
3.  #id
4.  .classname   -if spaces is present in classname than remove those spaces and give dot on that places

while working with dynamic element
example-
id=customer365User
next time
id=customer324User

startwith and endwith plays very important role
5.  input[id^='customer'][name='log'] 	- startwith example
6.  input[id$='Login']			- endwith example
7.  input[id*='Email']			- contains example


--------------------------------------------------------------------------------------------------------------------------------------------
how to write XPATH

1.Using single attribute

// tagname[@attribute=’value1’]

Example

// a [@href=’http://www.google.com’]

//input[@id=’name’ OR @class='abc']

//input[@name=’username’ AND @class='abc']

//img[@alt=’sometext’]


2.Using multiple attribute

//tagname[@attribute1=’value1’][attribute2=’value2’]

//a[@id=’id1’][@name=’namevalue1’]

//img[@src=’’][@href=’’]


3.Using contains method

//tagname[contains(@attribute,’value1’)]

//input[contains(@id,’’)]

//input[contains(@name,’’)]

//a[contains(@href,’’)][text()='abc']

//img[contains(@src,’’)]

//div[contains(@id,’’)]


4.Using starts-with method

//tagname[starts-with(@attribute-name,’’)]

//id[starts-with(@id,’’)]

//a[starts-with(@href=’’)]

//img[starts-with(@src=’’)]

//div[starts-with(@id=’’)]

//input[starts-with(@id=’’)]

//button[starts-with(@id,’’)]


5.Using Following node

Xpath/following::again-ur-regular-path

//input[@id=’’]/following::input[1]

//a[@href=’’]/following::a[1]

//img[@src=’’]/following::img[1]


6. Using preceding node

Xpath/preceding::again-ur-regular-path

//input[@id=’’]/ preceding::input[1]

//a[@href=’’]/ preceding::a[1]

//img[@src=’’]/ preceding::img[1]


7. Absolute XPath method
/html/head/body/div/input

8. Relative and Absolute XPath method

//parent-xpath/absolute xpath

//input[@id=’section’]/div/input
--------------------------------------------------------------------------------------------------------------------------------------------

If 1 XPATH matches with 2 or more than 2 node it will always perform operation on 1st matching node only
--------------------------------------------------------------------------------------------------------------------------------------------

when dealing with Bootstrap Login/popup/window  (Flipcart login or redbus login etc)- remember most of the time window will come under Frame so 1st we need to switch to Frame and than we can perform operations and if it is normal window than we can directly perform operations.

after switching ,it is now a separate window /alert-you can directly perform any operations

public static void main(String[] args) throws Exception {
		WebDriver driver = new FirefoxDriver();
		driver.get("https://www.goibibo.com/");
		driver.manage().window().maximize();
		driver.manage().timeouts().implicitlyWait(10, TimeUnit.SECONDS);
		driver.findElement(By.xpath(".//*[@id='get_sign_up']")).click();
		driver.switchTo().frame("authiframe");
		driver.findElement(By.xpath(".//*[@id='authMobile']")).sendKeys("99999999999");
	}
--------------------------------------------------------------------------------------------------------------------------------------------
Bootsrape Droqdown- The bootstrap dropdown is enhanced part of dropdown where you will deal with UL and LI tag of HTML.
To handle this kind of drop-down we have to use findElements method and then we can run a for loop to get specific elements.

public static void main(String[] args) throws Exception {
		WebDriver driver = new FirefoxDriver();
		driver.get("https://www.ebay.in/");
		driver.manage().window().maximize();
		driver.manage().timeouts().implicitlyWait(10, TimeUnit.SECONDS);
		driver.findElement(By.xpath(".//*[@id='gh-shop-a']")).click();
		List<WebElement> dd_menu=driver.findElements(By.xpath(".//*[@id='gh-sbc']/tbody/tr/td/ul/li/a"));
		System.out.println(dd_menu.size());
		System.out.println("----------------------------------------");
		for (int i = 0; i < dd_menu.size(); i++) {
			WebElement element=dd_menu.get(i);
			String innerHTML=element.getAttribute("innerHTML");
			if (innerHTML.contentEquals("Digital Cameras")) {
				element.click();
				break;
			}
			System.out.println(innerHTML);
		}
		
	}
--------------------------------------------------------------------------------------------------------------------------------------------
Dropdown- print all the values from dropdown

WebElement element = driver.findElement(By.xpath(".//*[@id='gh-cat']"));
		Thread.sleep(2000);
		Select select = new Select(element);
		List<WebElement> list = select.getOptions();
		System.out.println(list.size());
		System.out.println("-------------------------------------------");
		for (int i = 0; i < list.size(); i++) {
				System.out.println(list.get(i).getText());
		}

--------------------------------------------------------------------------------------------------------------------------------------------
Alert - Alert is an Interface
will use switchTo() method for- Alert/Frame/windowHandle

Note– alert is separate window so before using accept() or dismiss() methods we have to switch to alert window using switchTo() method

Example:-

        driver.findElement(By.xpath(".//*[@id='Table_3']/tbody/tr[1]/td[2]/div/a")).click();
        // Switch to alert window and capture the text and print
        System.out.println(driver.switchTo().alert().getText());
        // Pause testcase for 5 second
          Thread.sleep(5000);
        // click on ok button
 	driver.switchTo().alert().accept();
        // Close browser 
        driver.quit();
    }
---------------------------------------------------------

Now consider a scenario where alert window comes when certain condition true for this we can create method which will check if alert window present then only it will execute otherwise it will skip this part

public static void handleAlert(WebDriver ldriver){
 
           if(isAlertPresent(ldriver)){
 
           Alert alert = ldriver.switchTo().alert();
 
           System.out.println(alert.getText());
 
           alert.accept();
 
           }
 
           }
 
 
Important point- If alert in not present in the window and still we try to switchTo alert window then Selenium will throw NoAlertPresentException which will terminate your program so better you should use exception handle also in your script.
 
          public static boolean isAlertPresent(WebDriver ldriver){
 
                   try{
 
                   ldriver.switchTo().alert();
 
                   return true;
 
                   }catch(NoAlertPresentException ex){
 
                   return false;
 
                   }
 
                   }
--------------------------------------------------------------------------------------------------------------------------------------------

Mouse hover- print all the links 

WebElement element=driver.findElement(By.xpath(".//*[@id='nav-link-accountList']"));
		Actions act=new Actions(driver);
		act.moveToElement(element).build().perform();

		//XPATH is very very important for this type of problem

		List<WebElement>links=driver.findElements(By.xpath(".//*[@id='nav-flyout-accountList']//a"));
		for (int i = 0; i < links.size(); i++) {
			System.out.println(links.get(i).getText());
		}
		
--------------------------------------------------------------------------------------------------------------------------------------------

Element is not Clickable Exception-
-Mostly will get in Chrome and in Safari browser
-Try with diffrent XPATH
-mouse hover (best solution- click on middle of the element)
--------------------------------------------------------------------------------------------------------------------------------------------

Frames-
By default selenium will focus on parent window
-you need to perform any operation on Frame than you need to swtchTo that frame first and come back to parent window

how to identify Frames ?
ans- Source code (iframe/ frameset)

3 ways to switch to frame-index/id/webelement
if we dont have any id to find iframe- than so manny attibute will be there to find (you will get iframe id or attribute in HTML tag)
in Mozilla- you can directly check there is frame or not but in Chrome/IE you nedd to find manually

how to handle ?
ans- switch to frame-perform operation-switch back to parent window

how to find no of frames ?
ans-driver.findelements(By.tagname("iframe")).size();




driver.switchTo().frame(indexnumber);
driver.switchTo().frame(“framename”);
    driver.switchTo().defaultContent();


now if you want to find with the help of webelement

 try {
 
WebElement button=driver.findElement(By.xpath(""));  
 
driver.switchTo().frame(button);
 
}
catch (NoSuchFrameException e)
     {          
System.out.println(e.getMessage());     
 
     }

example-:

	int total_frame=driver.findElements(By.tagName("iframe")).size();	
	System.out.println(total_frame);
	WebElement my_frame=driver.findElement(By.xpath("//iframe[@title='selenium_news']"));
	driver.switchTo().frame(my_frame);

perform operation on frame now and than come back to parent window



--------------------------------------------------------------------------------------------------------------------------------------------
How to Scroll into view in Selenium Webdriver ?
ans- Selenium does not have inbuilt method which allow us to scroll into view but We can scroll into view in Selenium using JavaScript executor.


public static void main(String[] args) {
		// Start browser
		WebDriver driver = new FirefoxDriver();
		// Maximize browser
		driver.manage().window().maximize();
		// Pass application URL
		driver.get("http://manos.malihu.gr/repository/custom-scrollbar/demo/examples/complete_examples.html");

		// Create instance of Javascript executor
		JavascriptExecutor je = (JavascriptExecutor) driver;

		// Identify the WebElement which will appear after scrolling down
		WebElement element = driver.findElement(By.xpath(".//*[@id='mCSB_3_container']/p[3]"));

		// now execute query which actually will scroll until that element is not appeared on page.
		je.executeScript("arguments[0].scrollIntoView(true);", element);

		// Extract the text and verify
		System.out.println(element.getText());

	}


What is JavaScript

JavaScript is one of the programming languages of the Web.

JavascriptExecutor is an Interface which is available in package org.openqa.selenium.JavascriptExecutor;

Inside this Interface we have some predefined method called executeScript()- so whatever script you will pass as a String  It will be executed by JavascriptExecutor.
Note- This is the most common question in the interview that how to type in Selenium without using the sendKeys method.


Program 1- How to type in Selenium without using sendKeys() method

import org.openqa.selenium.JavascriptExecutor;
import org.openqa.selenium.firefox.FirefoxDriver;

public class TestFirefox {

public static void main(String[] args) throws InterruptedException {

// Open Firefox browser
FirefoxDriver driver=new FirefoxDriver();

// Maximize the window
driver.manage().window().maximize();

// Open applicatiion
driver.get("enter your application URL");

// This will execute JavaScript in your script
((JavascriptExecutor)driver).executeScript("document.getElementById('some id').value='mukesh';");

}

}


Program 2- How to click in Selenium if button or radio button is disable
package seleniumday1;
 
import org.openqa.selenium.JavascriptExecutor;
import org.openqa.selenium.firefox.FirefoxDriver;
 
public class TestFirefox {
 
public static void main(String[] args) throws InterruptedException {
 
// Open Firefox browser
FirefoxDriver driver=new FirefoxDriver();
 
// Maximize the window
driver.manage().window().maximize();
 
// Open applicatiion
driver.get("enter your application URL");
 
// This will execute JavaScript in your script
((JavascriptExecutor)driver).executeScript("document.getElementById('enter your element id').click();");
 
}
 
}



Program 3- How to uncheck checkbox in Selenium if checkbox is disable

package seleniumday1;

import org.openqa.selenium.JavascriptExecutor;
import org.openqa.selenium.firefox.FirefoxDriver;

public class TestFirefox {

public static void main(String[] args) throws InterruptedException {

// Open Firefox browser
FirefoxDriver driver=new FirefoxDriver();

// Maximize the window
driver.manage().window().maximize();

// Open applicatiion
driver.get("enter your application URL");

// This will execute JavaScript in your script
((JavascriptExecutor)driver).executeScript("document.getElementById('enter element id').checked=false;");
}

}

--------------------------------------------------------------------------------------------------------------------------------------------
How to Scroll Page in Selenium Webdriver using Java Script ?

Selenium handle scrolling page automatically but if want to scroll page using Selenium then yes we can do easily using JavaScript.

We have method scroll(horizontal, vertical) i.e. scroll(0,400)
Note- scroll method is not a method of Webdriver, this is a method of JavaScript.

public static void main(String[] args) throws Exception {
  
 // load browser
  WebDriver driver=new FirefoxDriver();
 
 
 // maximize browser
  driver.manage().window().maximize();
 
 
  // Open Application
  driver.get("http://jqueryui.com");
  
 
  // Wait for 5 second
  Thread.sleep(5000);
 
 // This  will scroll page 400 pixel vertical
  ((JavascriptExecutor)driver).executeScript("scroll(0,400)");
  
     
 }
--------------------------------------------------------------------------------------------------------------------------------------------

How to highlight elements Selenium Webdriver using JavaScript ?

public class aa {
 
 
public static void main(String []args){
 
 
WebDriver driver=new FirefoxDriver();
 
driver.manage().window().maximize();
 
driver.get("http://www.facebook.com");
 
 
// Inspect element
WebElement username= driver.findElement(By.id("email")); 
 
// Call reuse method
highLightElement(driver,username);
 
}
 
// Element highlighter code
public static void highLightElement(WebDriver driver, WebElement element)
{
JavascriptExecutor js=(JavascriptExecutor)driver; 
 
js.executeScript("arguments[0].setAttribute('style', 'background: yellow; border: 2px solid red;');", element);
 
try 
{
Thread.sleep(1000);
} 
catch (InterruptedException e) {
 
System.out.println(e.getMessage());
} 
 
js.executeScript("arguments[0].setAttribute('style','border: solid 2px white');", element); 
 
}
 }
--------------------------------------------------------------------------------------------------------------------------------------------
Robot class is not part of Selenium it comes with Java but we can use the same here.We have to use some keyboard event to perform this.
Step 1- We have to copy the file location in system clipboard.
Step 2- We have to click on upload button and use CTR+V and ENTER.
Note- Robot class each key has to press and release respectively


public static void main(String[] args) throws Exception {

		// Start browser
		WebDriver driver = new FirefoxDriver();

		// maximize browser
		driver.manage().window().maximize();

		// Specify the file location with extension
		StringSelection sel = new StringSelection("C:\\Users\\rahul goru\\Desktop\\TestNG.docx");

		// Copy to clipboard
		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(sel, null);
		System.out.println("selection" + sel);

		// Open Monster.com
		driver.get("http://my.monsterindia.com/create_account.html");
		Thread.sleep(2000);
		// This will scroll down the page
		JavascriptExecutor js = (JavascriptExecutor) driver;
		js.executeScript("scroll(0,350)");

		// Wait for 5 seconds
		Thread.sleep(5000);

		// This will click on Browse button
		driver.findElement(By.id("wordresume")).click();

		System.out.println("Browse button clicked");

		// Create object of Robot class
		Robot robot = new Robot();
		Thread.sleep(1000);
		// Press Enter
		robot.keyPress(KeyEvent.VK_ENTER);

		// Release Enter
		robot.keyRelease(KeyEvent.VK_ENTER);

		// Press CTRL+V
		robot.keyPress(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_V);

		// Release CTRL+V
		robot.keyRelease(KeyEvent.VK_CONTROL);
		robot.keyRelease(KeyEvent.VK_V);
		Thread.sleep(1000);
		System.out.println("-------------");
		// Press Enter 
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
		System.out.println("-----------------------------------------------");
	}


--------------------------------------------------------------------------------------------------------------------------------------------

Program to handle calendar in Selenium Webdriver

public static void main(String[] args) {
		WebDriver driver = new FirefoxDriver();

		driver.get("http://seleniumpractise.blogspot.in/2016/08/how-to-handle-calendar-in-selenium.html");

		driver.findElement(By.id("datepicker")).click();

		List<WebElement> allDates = driver.findElements(By
				.xpath("//table[@class='ui-datepicker-calendar']//td"));

		for (WebElement ele : allDates) {

			String date = ele.getText();

			if (date.equalsIgnoreCase("28")) {
				ele.click();
				break;
			}

		}

	}
--------------------------------------------------------------------------------------------------------------------------------------------

1. What is Automation Testing?
Automation testing is the process of testing the software using an automation tool to find the defects. In this process, executing the test scripts and generating the results are performed automatically by automation tools. Some most popular tools to do automation testing are HP QTP/UFT, Selenium WebDriver, etc.,

2. What are the benefits of Automation Testing?
•	Saves time and money. Automation testing is faster in execution.
•	Reusability of code. Create one time and execute multiple times with less or no maintenance.

•	Easy reporting. It generates automatic reports after test execution.
•	Easy for compatibility testing. It enables parallel execution in the combination of different OS and browser environments.
•	Low-cost maintenance. It is cheaper compared to manual testing in a long run.
•	Automated testing is more reliable.
•	Automated testing is more powerful and versatile.
•	It is mostly used for regression testing. Supports execution of repeated test cases.
•	Minimal manual intervention. Test scripts can be run unattended.
•	Maximum coverage. It helps to increase the test coverage.

3. What type of tests have you automated?
Our main focus is to automate test cases to do Regression testing, Smoke testing, and Sanity testing. Sometimes based on the project and the test time estimation, we do focus on End to End testing.

4. How many test cases you have automated per day?
It depends on Test case scenario complexity and length. I did automate 2-5 test scenarios per day when the complexity is limited. Sometimes just 1 or fewer test scenarios in a day when the complexity is high.




5. What is a Framework?
A framework defines a set of rules or best practices which we can follow in a systematic way to achieve the desired results. There are different types of automation frameworks and the most common ones are:
•	Data Driven Testing Framework
•	Keyword Driven Testing Framework
•	Hybrid Testing Framework


6. Have you created any Framework?
If you are a beginner: No, I didn’t get a chance to create a framework. I have used the framework which is already available.
If you are an experienced tester: Yes, I have created a framework.  Or I have involved in the creation of the framework.


7. Can you explain the Framework which you have used in your Selenium Project?
Here we have clearly explained each component of Framework. 


8. Why do you prefer Selenium Automation Tool?

•	Free and open source
•	Have large user base and helping communities
•	Cross browser compatibility
•	Platform compatibility
•	Multiple programming languages support


9. What is Selenium?
Selenium is an open source (free) automated testing suite to test web applications. It supports different platforms and browsers. It has gained a lot of popularity in terms of web-based automated testing and giving a great competition to the famous commercial tool HP QTP (Quick Test Professional) AKA HP UFT (Unified Functional Testing).
Selenium is a set of different software tools. Each tool has a different approach in supporting web based automation testing.
It has four components namely,
i	Selenium IDE (Integrated Development Environment)
ii	Selenium RC (Remote Control) – selenium 1
iii	Selenium WebDriver – selenium 2 & 3
iv	Selenium Grid


10. What is Selenium IDE?
Selenium IDE (Integrated Development Environment) is a Firefox plugin. It is the simplest framework in the Selenium Suite. It allows us to record and playback the scripts. Even though we can create scripts using Selenium IDE, we need to use Selenium RC or Selenium WebDriver to write more advanced and robust test cases.


11. What is Selenese?
Selenese is the language which is used to write test scripts in Selenium IDE.



12. Which is the only browser that supports Selenium IDE to be used?
Firefox


13. What is Selenium RC?
Selenium RC AKA Selenium 1. Selenium RC was the main Selenium project for a long time before the WebDriver merge brought up Selenium 2. Selenium 1 is still actively supported (in maintenance mode). It relies on JavaScript for automation. It supports Java, Javascript, Ruby, PHP, Python, Perl and C#. It supports almost every browser out there.


14. What is Selenium WebDriver?
Selenium WebDriver AKA Selenium 2 is a browser automation framework that accepts commands and sends them to a browser. It is implemented through a browser-specific driver. It controls the browser by directly communicating with it. Selenium WebDriver supports Java, C#, PHP, Python, Perl, Ruby.


15. What is Selenium Grid?
Selenium Grid is a tool used together with Selenium RC to run tests on different machines against different browsers in parallel. That is, running multiple tests at the same time against different machines running different browsers and operating systems.

In simple words, it is used to distribute your test execution on multiple platforms and environments concurrently.


16. When do you use Selenium Grid?
Selenium Grid can be used to execute same or different test scripts on multiple platforms and browsers concurrently so as to achieve distributed test execution


17. What are the advantages of Selenium Grid?
It allows running test cases in parallel thereby saving test execution time.
It allows multi-browser testing
It allows us to execute test cases on multi-platform


18. What is a hub in Selenium Grid?
A hub is a server or a central point that controls the test executions on different machines.


19. What is a node in Selenium Grid?
Node is the machine which is attached to the hub. There can be multiple nodes in Selenium Grid.




20. What are the types of WebDriver APIs available in Selenium?
•	Firefox Driver
•	Gecko Driver
•	InternetExplorer Driver
•	Chrome Driver
•	HTMLUNIT Driver
•	Opera Driver
•	Safari Driver
•	Android Driver
•	iPhone Driver
•	EventFiringWebDriver


21. Which WebDriver implementation claims to be the fastest?


The fastest implementation of WebDriver is the HTMLUnitDriver. It is because the HTMLUnitDriver does not execute tests in the browser.


22. What are the Programming Languages supported by Selenium WebDiver?
•	Java
•	C#
•	Python
•	Ruby
•	Perl
•	PHP

23. What are the Operating Systems supported by Selenium WebDriver?
•	Windows
•	Linux
•	Apple

24. What are the Open-source Frameworks supported by Selenium WebDriver?
•	JUnit
•	TestNG
•	CUCUMBER
•	JBHEAVE

25. What are the Locators available in Selenium?
Different types of locators are:
1	ID – Practical example
2	ClassName – Practical example
3	Name – Practical example
4	TagName – Practical example
5	LinkText – Practical example
6	PartialLinkText – Practical example
7	XPath – Practical example
8	CSS Selector – Practical example

26. What is a XPath?
XPath is used to locate the elements. Using XPath, we could navigate through elements and attributes in an XML document to locate web elements such as textbox, button, checkbox, Image etc., in a web page.


27. What is the difference between “/” and “//” 
Single Slash “/” – Single slash is used to create XPath with absolute path i.e. the XPath would be created to start selection from the document node/start node.




Double Slash “//” – Double slash is used to create XPath with relative path i.e. the XPath would be created to start selection from anywhere within the document.

28. What is the difference between Absolute Path and Relative Path?
Absolute XPath starts from the root node and ends with desired descendant element’s node. It starts with top HTML node and ends with input node. It starts with a single forward slash(/) as shown below.
/html/body/div[3]/div[1]/form/table/tbody/tr[1]/td/input
Relative XPath starts from any node in between the HTML page to the current element’s node(last node of the element). It starts with a single forward slash(//) as shown below.
//input[@id='email']


29. What is the difference between Assert and Verify in Selenium?
Assert: In simple words, if the assert condition is true then the program control will execute the next test step but if the condition is false, the execution will stop and further test step will not be executed.

Verify: In simple words, there won’t be any halt in the test execution even though the verify condition is true or false.
For detailed post check the below link.
Assert Vs. Verify




 
30. What are Soft Assert and Hard Assert in Selenium?
Soft Assert: Soft Assert collects errors during @Test Soft Assert does not throw an exception when an assert fails and would continue with the next step after the assert statement

Hard Assert: Hard Assert throws an AssertException immediately when an assert statement fails and test suite continues with next @Test
Detailed Post: Soft Assert











31. What are the verification points available in Selenium?
In Selenium IDE, we use Selenese Verify and Assert Commands as Verification points

In Selenium WebDriver, there is no built-in features for verification points. It totally depends on our coding style. some of the Verification points are
To check for page title
To check for certain text
To check for certain element (text box, button, drop down, etc.)




32. How to launch a browser using Selenium WebDriver?
WebDriver is an Interface. We create Object of a WebDriver Interface.

<2.53 – no geckodriver
3.x – geckodriver for FF


To launch Firefox Driver: WebDriver driver = new FirefoxDriver();



To launch Chrome Driver: WebDriver driver = new ChromeDriver();

To launch Internet Explorer Driver: WebDriver driver = new InternetExplorerDriver();




33. Is the FirefoxDriver a Class or an Interface? 
FirefoxDriver is a Java class, and it implements the WebDriver interface.



 

34. What is the super interface of WebDriver?
SearchContext.

35. Explain the line of code Webdriver driver = new FirefoxDriver(); ?

 ‘WebDriver‘ is an interface and we are creating an object reference of type WebDriver instantiating an object of FirefoxDriver class.
36. We do create a reference variable ‘driver’ of type WebDriver
WebDriver driver = new FirefoxDriver();

instead of creating

FirefoxDriver driver = new FirefoxDriver();

What is the purpose of doing this way?
If we create a reference variable driver of type WebDriver then we could use the same driver variable to work with any browser of our choice such as IEDriver, SafariDriver etc.,

//FirefoxDriver driver = new FirefoxDriver();
ChromeDriver driver = new ChromeDriver();
driver.get(“http://www.google.com”);

WebDriver driver = new FirefoxDriver();




37. What are the different exceptions you have faced in Selenium WebDriver?
•	WebDriverException
•	TimeoutException
•	NoAlertPresentException
•	NoSuchWindowException
•	NoSuchElementException
•	StaleElementReferenceException
•	IllegalStateException





38. How To Login Into Any Site If It Is Showing Any Authentication Pop-Up For Username And Password?
To do this we pass username and password with the URL
http://username:password@url
e.g. http://admin:admin123@xyz.com



39. What are the types of waits available in Selenium WebDriver?
In Selenium we could see three types of waits such as Implicit Waits, Explicit Waits and Fluent Waits.
•	Implicit Waits – Click to view detailed post
•	Explicit Waits – Click to view detailed post
•	Fluent Waits – Click to view detailed post
•	PageLoadTimeOut 
•	Thread.sleep() – static wait




40. What is Implicit Wait In Selenium WebDriver?
Implicit waits tell to the WebDriver to wait for a certain amount of time before it throws an exception. Once we set the time, WebDriver will wait for the element based on the time we set before it throws an exception. The default setting is 0 (zero). We need to set some wait time to make WebDriver to wait for the required time.



41. What is WebDriver Wait In Selenium WebDriver?
WebDriverWait is applied on a certain element with defined expected condition and time. This wait is only applied to the specified element. This wait can also throw an exception when an element is not found.




42. What is Fluent Wait In Selenium WebDriver?
FluentWait can define the maximum amount of time to wait for a specific condition and frequency with which to check the condition before throwing an “ElementNotVisibleException” exception.




43. How to input text in the text box using Selenium WebDriver?
By using sendKeys() method
WebDriver driver = new FirefoxDriver();
driver.get("https://www.gmail.com");
driver.findElement(By.xpath("xpath")).sendKeys("test");






44. How to input text in the text box without calling the sendKeys()?
// To initialize js object
JavascriptExecutor JS = (JavascriptExecutor)driver;
// To enter username
JS.executeScript("document.getElementById(‘User').value=test.com'");




45. How to clear the text in the text box using Selenium WebDriver?
By using clear() method
WebDriver driver = new FirefoxDriver();
driver.get("https://www.gmail.com");
driver.findElement(By.xpath("xpath_of_element1")).sendKeys("Software Testing Material Website");
driver.findElement(By.xpath("xpath_of_element1")).clear();




46. How to get a text of a web element?
By using getText() method


47. How to get an attribute value using Selenium WebDriver?
By using getAttribute(value);
48. How to click on a hyperlink using Selenium WebDriver?
We use click() method in Selenium to click on the hyperlink
driver.findElement(By.linkText(“Software Testing Material Website”)).click();
1	driver.findElement(By.linkText(“Software Testing Material Website”)).click();






49. How to submit a form using Selenium WebDriver?
We use “submit” method on element to submit a form
driver.findElement(By.id("form_1")).submit();
1
Alternatively, you can use click method on the element which does form submission


50. How to press ENTER key on text box In Selenium WebDriver?
To press ENTER key using Selenium WebDriver, We need to use Selenium Enum Keys with its constant ENTER.
driver.findElement(By.xpath("xpath")).sendKeys(Keys.ENTER);





51. How to pause a test execution for 5 seconds at a specific point?
By using java.lang.Thread.sleep(long milliseconds) method we could pause the execution for a specific time. To pause 5 seconds, we need to pass parameter as 5000 (5 seconds)
Thread.sleep(5000)




52. Is Selenium Server needed to run Selenium WebDriver Scripts?
When we are distributing our Selenium WebDriver scripts to execute using Selenium Grid, we need to use Selenium Server.


53. What happens if I run this command. driver.get(“www.softwaretestingmaterial.com”) ;
An exception is thrown. We need to pass HTTP protocol within driver.get() method.
driver.get("http://www.softwaretestingmaterial.com");
1	driver.get("http://www.softwaretestingmaterial.com");

54. What is the alternative to driver.get() method to open an URL using Selenium WebDriver?
Alternative method to driver.get(“url”) method is driver.navigate.to(“url”)




55. What is the difference between driver.get() and driver.navigate.to(“url”)?
driver.get(): To open an URL and it will wait till the whole page gets loaded
driver.navigate.get(): To navigate to an URL and It will not wait till the whole page gets loaded




56. Can I navigate back and forth in a browser in Selenium WebDriver?
We use Navigate interface to do navigate back and forth in a browser. It has methods to move back, forward as well as to refresh a page.

driver.navigate().forward(); – to navigate to the next web page with reference to the browser’s history

driver.navigate().back(); – takes back to the previous webpage with reference to the browser’s history

driver.navigate().refresh(); – to refresh the current web page thereby reloading all the web elements

driver.navigate().to(“url”); – to launch a new web browser window and navigate to the specified URL





57. What are the different types of navigation commands?
Refer above question (Can I navigate back and forth in a browser)

58. How to fetch the current page URL in Selenium?
To fetch the current page URL, we use getCurrentURL()
driver.getCurrentUrl();



59. How can we maximize browser window in Selenium?
To maximize browser window in selenium we use maximize() method. This method maximizes the current window if it is not already maximized
driver.manage().window().maximize();
60. How to delete cookies in Selenium?
To delete cookies we use deleteAllCookies() method
driver.manage().deleteAllCookies();
















61. What are the ways to refresh a browser using Selenium WebDriver?
There are multiple ways to refresh a page in selenium
•	Using driver.navigate().refresh() command as mentioned in the question 45
•	Using driver.get(“URL”) on the current URL or using driver.getCurrentUrl()
•	Using driver.navigate().to(“URL”) on the current URL or driver.navigate().to(driver.getCurrentUrl());
•	Using sendKeys(Keys.F5) on any textbox on the webpage




62. What is the difference between driver.getWindowHandle() and driver.getWindowHandles() in Selenium WebDriver?

driver.getWindowHandle() – It returns a handle of the current page (a unique identifier)
driver.getWindowHandles() – It returns a set of handles of the all the pages available.


63. What is the difference between driver.close() and driver.quit() methods?
Purpose of these two methods (driver.close and driver.quit) is almost same. Both allow us to close a browser but still, there is a difference.
driver.close(): To close current WebDriver instance
driver.quit(): To close all the opened WebDriver instances




64. What is the difference between driver.findElement() and driver.findElements() commands?
The difference between driver.findElement() and driver.findElements() commands is-
•	findElement() returns a single WebElement (found first) based on the locator passed as parameter. Whereas findElements() returns a list of WebElements, all satisfying the locator value passed.
•	Syntax of findElement()-
•	WebElement textbox = driver.findElement(By.id(“textBoxLocator”));
•	Syntax of findElements()-
•	List <WebElement> elements = element.findElements(By.id(“value”));
•	Another difference between the two is- if no element is found then findElement() throws NoSuchElementException whereas findElements() returns a list of 0 elements.

List<WebElement> list = driver.findElements(By.tagName(“a”));
Sop(list.size()); ==40

65. How to find whether an element is displayed on the web page? 
WebDriver facilitates the user with the following methods to check the visibility of the web elements. These web elements can be buttons, drop boxes, checkboxes, radio buttons, labels etc.
1	isDisplayed()
2	boolean elePresent = driver.findElement(By.xpath("xpath")).isDisplayed();
3	1 	4	boolean elePresent = driver.findElement(By.xpath("xpath")).isDisplayed(); 	5	 	
1	isSelected()
2	boolean eleSelected= driver.findElement(By.xpath("xpath")).isSelected();
3	1 	4	boolean eleSelected= driver.findElement(By.xpath("xpath")).isSelected(); 	5	 	
1	isEnabled()
2	boolean eleEnabled= driver.findElement(By.xpath("xpath")).isEnabled();
3	1 	4	boolean eleEnabled= driver.findElement(By.xpath("xpath")).isEnabled(); 	5	 	




66. How to select a value in a dropdown?
By using Select class
WebElement mySelectElement = driver.findElement(By.name("dropdown"));

Select dropdown = new Select(mySelectElement);

dropdown.selectByVisibleText(Text);
dropdown.selectByIndex(Index);
dropdown.selectByValue(Value);



Practical Example:



67. How to capture Screenshot in Selenium WebDriver?
By using TakesScreenshot Interface

In Selenium 3, we may face few issues while capturing Screenshots. To overcome we use aShot utility. Click on below links to see posts related to the normal way of capturing a screenshot and capturing a screenshot using aShot utility.




68. How to mouse hover on a web element using WebDriver?
By using Actions class
WebElement ele = driver.findElement(By.xpath("xpath"));
//Create object 'action' of an Actions class
Actions action = new Actions(driver);
//Mouseover on an element
action.moveToElement(ele).build().perform();


Practical Example.






69. How can we handle web based pop-up?
To handle alerts popups we need to do switch to the alert window and call Selenium WebDriver Alert API methods.
Practical Example.




70. How can we handle windows based pop up?
Selenium doesn’t support windows based applications. It is an automation testing tool which supports only web application testing. We could handle windows based popups in Selenium using some third party tools such as AutoIT, SIKULI, Robot class etc.





71. How to handle hidden elements in Selenium WebDriver?
It is one of the most important selenium interview questions.
We can handle hidden elements by using javaScript executor
(JavascriptExecutor(driver)).executeScript("document.getElementsByClassName(ElementLocator).click();");






72. How can you find Broken Links in a page using Selenium WebDriver?
Practical Example.







73. How to find more than one web element in the list?
// To store the list
List <WebElement> eleList = driver.findElements(By.xpath("xpath"));
// To fetch the size of the list
int listSize = eleList.size();
//for loop
for (int i=0; i<listSize; i++)
{
	// Clicking on each link
	links.get(i).click();
	// Navigating back to the previous page that stores the links
	driver.navigate().back();
}



74. How to read a JavaScript variable in Selenium WebDriver?
By using JavascriptExecutor
// To initialize the JS object.
JavascriptExecutor JS = (JavascriptExecutor) webdriver;

// To get the site title.
String title = (String)JS.executeScript("return document.title");
System.out.println("Title of the webpage : " + title);



75. How do you read test data from excels?
Test data can efficiently be read from excel using JXL or POI API. POI API has many advantages than JXL.



76. Is it possible to automate the captcha using Selenium?
No, It’s not possible to automate captcha and bar code reader.




77. List some scenarios which we cannot automate using Selenium WebDriver?
1. Bitmap comparison Is not possible using Selenium WebDriver
2. Automating Captcha is not possible using Selenium WebDriver
3. We can not read bar code using Selenium WebDriver
4. windows OS based pop ups
5. third party calendars/element
6. Image 
7. Word/PDF


78. What is Object Repository in Selenium WebDriver?
Object Repository is used to store element locator values in a centralized location instead of hard coding them within the scripts. We do create a property file (.properties) to store all the element locators and these property files act as an object repository in Selenium WebDriver.





79. How can you use the Recovery Scenario in Selenium WebDriver?
By using “Try Catch Block” within Selenium WebDriver Java tests.
try {
     driver.get("www.xyz.com");
}catch(Exception e){
     System.out.println(e.getMessage());
}



80. How to Upload a file in Selenium WebDriver?
There are two cases which are majorly used to upload a file in Selenium WebDriver such as using SendKeys Method and using AutoIT Script.
Practical Example.

Browser Button – type =“file”
SendKeys (c:\\test\\naveen.jpg);


81. How to Download a file in Selenium WebDriver?
By using AutoIT script, we could download a file in Selenium WebDriver.





82. How to run Selenium WebDriver Test from the command line?
Run Java Program using Command Prompt

Class A{

}

cd c
c: javac A.java
c: java A.java



Run TestNG using Command Prompt
java org.testng.TestNG C:\Users \Desktop\ \workspace\testing\testng.xml


83. How to switch between frames in Selenium?
By using the following code, we could switch between frames.
driver.switchTo().frame();


84. How to connect a Database in selenium?
As we all know Selenium WebDriver is a tool to automate User Interface. We could only interact with Browser using Selenium WebDriver.
We use JDBC Driver to connect the Database in Selenium (While using Java Programming Language).
Practical Example



85. How To Resize Browser Window Using Selenium WebDriver?
To resize the browser window to particular dimensions, we use ‘Dimension’ class to resize the browser window.
Practical Example

        //Create object of Dimensions class
        Dimension d = new Dimension(480,620);
        //Resize the current window to the given dimension
        driver.manage().window().setSize(d);




86. How To Scroll Web Page Down Or UP Using Selenium WebDriver?
JavaScript scrollBy() method scrolls the document by the specified number of pixels.




87. How To Perform Right Click Action (Context Click) In Selenium WebDriver?
We use Actions class in Selenium WebDriver to do Right-Click (Context Click) action.


                action.contextClick(driver.findElement(By.xpsjht()).build().perform();




88. How To Perform Double Click Action In Selenium WebDriver?
We use Actions class to do Double click action in selenium.



89. How To Perform Drag And Drop Action in Selenium WebDriver?
We use Actions class to do Drag And Drop Action






90. How To Highlight Element Using Selenium WebDriver?
By using JavascriptExecutor interface, we could highlight the specified element





Question What are the different ceremonies in Agile Scrum?

Sprint (or iteration) is the heart of Scrum. It calls for below ceremonies that bring structure to each sprint:

• Sprint Planning : Held at the start of each sprint to define the Sprint Backlog (importing stories from the Product/Release backlog), i.e. items that can be completed in the current sprint. As you might have guessed, the Product Owner drives Sprint Planning as in which stories are highest in priority.

• Daily Scrum : Presided over by the Scrum Master, Daily Scrum is a 15-minute stand-up meeting to synchronize the work of team members, i.e. what’s done on the prior day, what needs to be done today, and identify any impediments. It is also a means to track Sprint progress.

• Sprint Review : Held at the end of each sprint to demonstrate the added functionality. The goal is to get feedback from the product owner and other stakeholders to ensure that the delivered increment met the business need and to revise the Product Backlog based on the feedback.

• Sprint Retrospective : Held at the end of each sprint to reflect on the completed sprint and identify opportunities to improve in the next – what went well, what did not and what can be improved. It allows the team to focus on its overall performance and identify strategies for continuous improvement.


Explain REST?
Ans. REST stands for Representational State Transfer. REST is an architectural style of developing web services which take advantage of the ubiquity of HTTP protocol and leverages HTTP method to define actions. It revolves around resource where every component is a resource which can be accessed by a common interface using HTTP standard methods.
In REST architecture, a REST Server provides access to resources and REST client accesses and presents those resources. Here each resource is identified by URIs or global IDs. REST uses different ways to represent a resource like text, JSON, and XML.XML and JSON are the most popular representations of resources these days.
 
What Is The Most Popular Way To Represent A Resource In REST?
Ans. REST uses different representations to define a resource like text, JSON, and XML.
JSON is  the most popular representations of resources.

Explain What Is A “Resource” In REST?
Ans. REST architecture treats every content as a resource. These resources can be either text files, HTML pages, images, videos or dynamic business data.
REST Server provides access to resources and REST client accesses and modifies these resources. Here each resource is identified by URIs/ global IDs.



Which Protocol Is Used By RESTful Web Services?
Ans. RESTful web services make use of HTTP protocol as a medium of communication between client and server.


What Is Messaging In RESTful Web Services?
Ans. RESTful web services make use of HTTP protocol as a medium of communication between client and server. The client sends a message in the form of an HTTP Request.
In response, the server transmits the HTTP Response. This technique is called Messaging. These messages contain message data and metadata i.e. information about the message itself.

State The Core Components Of An HTTP Request?
Ans. Each HTTP request includes five key elements.
1. The Verb which indicates HTTP methods such as GET, PUT, POST, DELETE.
2. URI stands for Uniform Resource Identifier (URI).It is the identifier for the resource on the server.
3. HTTP Version which indicates HTTP version, for example-HTTP v1.1.
4. Request Header carries metadata (as key-value pairs) for the HTTP Request message. Metadata could be a client (or browser) type, the format that client supports, message body format, and cache settings.
5. Request Body indicates the message content or resource representation.

What is Rest Assured?
In order to test REST APIs, I found REST Assured library so useful. It is developed by JayWay Company and it is a really powerful catalyzer for automated testing of REST-services. REST-assured provides a lot of nice features, such as DSL-like syntax, XPath-Validation, Specification Reuse, easy file uploads and with those features we will handle automated API testing much easier.

How to declare the API details in Rest Assured Test?
Using Given(), When(), Then()

Name The Most Commonly Used HTTP Methods Supported By REST?
Ans. There are a few HTTP methods in REST which are more popular.
1.	GET -It requests a resource at the request-URL. It should not contain a request body as it will get discarded. Maybe it can be cached locally or on the server.
2. POST – It submits information to the service for processing; it should typically return the modified or new resource.
3. PUT – At the request URL it updates the resource.
4. DELETE – It removes the resource at the request-URL.
5. OPTIONS -It indicates the supported techniques.
6. HEAD – It returns meta information about the request URL.
2.	
Is There Any Difference Between PUT And POST Operations? Explain It.
Ans. PUT and POST operation are almost same. The only difference between the two is in the terms of the result generated by them.
PUT operation is idempotent while POST operation can give a different result.

What Is URI? Explain Its Purpose In REST Based Web Services. What Is Its Format?
Ans. URI stands for Uniform Resource Identifier. URI is the identifier for the resource in REST architecture.
The purpose of a URI is to locate a resource(s) on the server hosting the web service. A URI is of the following format-
<protocol>://<service-name>/<ResourceType>/<ResourceID>



How to compare the response values with Rest Assured Assertion?

Example :
given().
         parameters("firstName", "John", "lastName", "Doe").
when().
         post("/greetXML").
then().
         body("greeting.firstName", equalTo("John")).
         body("greeting.lastName", equalTo("Doe"));

How to Insert cookies in Testing the API using Rest Assured?
given().cookie("username", "John").when().get("/cookie").then().body(equalTo("username"));

How to Insert headers in Testing the API using Rest Assured?
given().header("MyHeader", "Something").

How to Validate Response Headers with Rest Assured?
get("/x").then().assertThat().header("headerName", "headerValue").


How to handle Basic Authentication with Rest Assured?

given().auth().preemptive().basic("username", "password").when().get("/secured/hello").then().statusCode(200);


What Do You Understand By Payload In RESTFul Web Service?
Ans. Request body of every HTTP message includes request data called as Payload. This part of the message is of interest to the recipient.
We can say that we send the payload in POST method but not in <GET> and <DELTE> methods.


1.An element has an id "bng_123" but number is changing how to handle it?
Ans. Using dynamic xpath  //tagname[starts-with(@id,'bng')]

2.how to get text from hidden elements?
String script = "return arguments[0].innerHTML";
As defined in WebDriver spec, Selenium WebDriver will only interact with visible elements, therefore the text of an invisible element will always be returned as an empty string.

However, in some cases, one may find it useful to get the hidden text, which can be retrieved from element's textContent, innerText or innerHTML attribute, by calling element.attribute('attributeName') or injecting JavaScript like return arguments[0].attributeName.

3.Difference between Selenium-IDE & Selenium RC , WebDriver
Ans. Selenium has started in 2004 and it is designed by ThoughtWorks (they have one of the branch in Koramangala Bangalore). Later on it is OpenQA has taken and maintaining till now.

Selenium Started in with Add-on in firefox which is known as Selenium IDE and trust me it is one of the most popular Addon in market.

It gives you flexibility to convert your code into multiple languages and use it accordingly.

Now you will get plenty of Add-on  that you can integrate with Selenium IDE itself and you can use it.

Some plugin that I used  with IDE is screenshot on failure, highlighter, export code into excel and  so on.
But Selenium IDE has some of the limitation like

1- It is only available in Firefox so we can record your script in firefox only.

2- Selenium IDE does not have good reporting feature which generally we use for reporting to managers and lead or Team.

3- Selenium IDE does not support parallel execution which is one of the most important features of Automation.
 
4- Selenium IDE does not support remote execution as well.

 Selenium 1/Selenium Rc
 Selenium team was totally aware of all this limitations so in 2007 they came with another version which covers almost all the limitation of Selenium IDE.

Selenium team released new version called Selenium RC. Here RC stands for remote control.

Selenium RC is not another tool or plugin it is just library which contains several packages classes interfaces and methods.

Selenium RC had so many features like

1- It supports almost all browser which is available in the market.

2- We can easily integrate Selenium RC with TestNG which makes Selenium more powerfull.

3-  Selenium RC having very good reporting feature with the help of TestNG.

4- Now we can do execution in parallel which the help of TestNG. We can pass multiple parameters, data driven and all the features which TestNG have.

5- Selenium RC came with Remote execution which we can achieve through Selenium grid.
 

Limitations of Selenium RC
It seems like Selenium RC was very powerfull and does not have any limitations but no Selenium RC also had some limitations which were

1- It generally interact with Server it means everytime you run script it will send request to server then server will communicate with browsers.
Performance was an issue ere.

2- Since 2010 Mobile industry is leading in market so Selenium RC was  not capable to perform.elenium Webdriver came in 2011 and It supports all the feature of Selenium RC and additionally they have following benefits.

1- They removed server part from it so performance not an issue in Webdriver. It means simply write your code and it will directly communicate with browsers.
 
2- Selenium Webdriver supports Mobile Automation as well which make Selenium more powerfull. Currently Selendroid and Appium are present which allow us to automate IOS and Android application.

Soon Webriver will launch API for other platforms too.

Selenium Grid – 2.0
If you are using Grid with Selenium Webdriver.

 
 
 3. Difference between 
WebDriver driver = new FirefoxDriver()
FirefoxDriver driver = new FirefoxDriver()

Webdriver is an interface which have a multiple methods ,but for implementation of those methods we need a classes,
So we are creating an object of FirefoxDriver with reference of WebDriver and that is driver,so with the help of driver reference we can call any method of WebDriver and when we want to perform cross browser testing we just need to change class name and no nned to create object of class again.
FirefoxDriver driver = new FirefoxDriver()  --applicable only for firefox


4. Difference between get(), navigate().to()
Ans. both methods are used to launce the URL but navigate() can e used for launce external URL.
i.e. suppose browser history is present than, navigate().forward() , navigate().back() also availabel, we can refresh the browser using navigate() method.

8. What is WEbdriver “interface” or Class
Ans. WebDriver is an interface,which have multiple methods but for implementation of those methods we need a classes.

9. What is Super interface for WebDriver
Ans. SearchContext

10. What is WebElement & explain all the Mtds available in WebElement

11. How many locator is available in Webdriver , & which locator is 
Ans. 8 types of locator- id is fastest and xpath is most preferable

12. How to check whether object is available in GUI  
Ans. isDisplayed() - which return boolean

6. Difference between quit() & close()
Ans. close()-close the current open window which is opened by WebDriver
quit()- close all the open window which is opened by WebDriver


86. What is SVN or GitHub.
At a high level, GitHub is a website and cloud-based service that helps developers store and manage their code, as well as track and control changes to their code. To understand exactly what GitHub is, you need to know two connected principles:

Version control
Git
What Is Version Control?
Version control helps developers track and manage changes to a software project’s code. As a software project grows, version control becomes essential. Take WordPress…

At this point, WordPress is a pretty big project. If a core developer wanted to work on one specific part of the WordPress codebase, it wouldn’t be safe or efficient to have them directly edit the “official” source code.

Instead, version control lets developers safely work through branching and merging.

With branching, a developer duplicates part of the source code (called the repository). The developer can then safely make changes to that part of the code without affecting the rest of the project.

Then, once the developer gets his or her part of the code working properly, he or she can merge that code back into the main source code to make it official.

All of these changes are then tracked and can be reverted if need be.What Is Git?
Git is a specific open-source version control system created by Linus Torvalds in 2005.

Specifically, Git is a distributed version control system, which means that the entire codebase and history is available on every developer’s computer, which allows for easy branching and merging.
Git HUb- What Is Git?
Git is a specific open-source version control system created by Linus Torvalds in 2005.

Specifically, Git is a distributed version control system, which means that the entire codebase and history is available on every developer’s computer, which allows for easy branching and merging.




18. How to fetch an element when its attributes are changing frequently?
dynamic xpath

19. What are the ways to click on a button?
click() , submit()

20. What are different types of wait (write the syntax)and explain the scenarios where you will use them?
implicit wait- it will applicable throught the webdriver life and for all the element
explicit wait- specific to element with conditions
fluent wait-specific to element with conditions but we can set the polling/frequency time
static wait-wait upto given time (Thread.sleep(20))


Selenium Interview Questions
1. What are the components of Selenium?
Selenium IDE
Selenium RC-Remote control
Selenium WebDriver
Selenium Grid

2. Which version you are using and what addition features you see from the previous version?
Selenium WebDriver- open sorce, support multiple languages, multiple browser, lot of community support but only for browser automation, no direct reporting, we can integrate with Mavn, TestNG, Apache POI, Jenkins,GIT.

3. What is a WebDriver?
WebDriver is an interface,which have multiple methods but for implementation of those methods we need a classes- FirefoxDriver(),ChromeDriver() etc.

4. How do you select you drivers to launch a url?
driver.get("http:www.google.com")
driver.navigate().to("http://www.google.com")

5. Which method is used to fetch the driver?
get()
getCurrentUrl();
getTitle()
findElements()
findElement()
getPageSource()
close()
quit()



9. How do you explain the concept of object repository?
It is a storage location where we stores all the webelement of that paarticular page.

10. What is the difference between findElement and findElements and what is return type? Give some example where it is used?
findelement - applicable for single element, if more than one matching nodes are availabel it return 1st matching element,if no matching node than it will throw the excepions(NoSuchElementException)

findElements - applicable for more than one element, it will return list of webelement, if there is no matching node it will return empty list

11. Which method is used to get the text of an element?
getText()

12. How do you fetch an attribute value of an element?
driver.findElement(By.xpath("")).getAttribute("id");
		driver.findElement(By.xpath("")).getAttribute("name");
		driver.findElement(By.xpath("")).getAttribute("text");
		
13. When multiple checkboxes are there how do you check which one is checked previously?
isSelected()- this method have 2 parameter and return type is boolean

14. What is the return type of isSelected() method?
boolean

15. What are the methods used to verify the existence of an object in a webpage?
isDisplayed() - this method have 2 parameter and return type is boolean


26. How do you handle an alert pop-up?
using Alert interface- 
Alert alert=driver.switchTo().alert();
		alert.accept();
		alert.dismiss();
		alert.getText();
		alert.sendKeys("");


29. How do you handle Frames in selenium?
driver.switchTo().frame(index);
		driver.switchTo().frame(nameOrId);
		driver.switchTo().frame(frameElement)
		
30. Give one example of method overloading concept used in Selenium? 
Ans : Switching to frames

31. How do you select a dropdown value and what are the different methods are there?
WebElement element=driver.findElement(By.xpath(""));
	Select sel=new Select(element);
		sel.selectByIndex(index);
		sel.selectByValue(value);
		sel.selectByVisibleText(text);
		
		Q. What are some common exceptions in Selenium Webdriver?

• ElementNotVisibleException : Although an element is present in the DOM, it is not visible (cannot be interacted with). E.g. Hidden Elements – defined in HTML using type=”hidden”.
• ElementNotSelectableException : Although an element is present in the DOM, it may be disabled (cannot be clicked/selected).
• InvalidSelectorException : Selector used to find an element does not return a WebElement. Say XPath expression is used which is either syntactically invalid or does not select WebElement.
• NoSuchElementException : WebDriver is unable to identify the elements during run time, i.e. FindBy method can’t find the element.
• NoSuchFrameException : WebDriver is switching to an invalid frame, which is not available.
• NoAlertPresentException : WebDriver is switching to an invalid alert, which is not available.
• NoSuchWindowException : WebDriver is switching to an invalid window, which is not available.
• StaleElementReferenceException : The referenced element is no longer present on the DOM page (reference to an element is now Stale). E.g. The Element belongs to a different frame than the current one OR the user has navigated away to another page.
• SessionNotFoundException : The WebDriver is performing the action immediately after ‘quitting’ the browser.
• TimeoutException : The command did not complete in enough time. E.g. the element didn’t display in the specified time. Encountered when working with waits.
• WebDriverException : The WebDriver is performing the action immediately after ‘closing’ the browser.


Q #1) Explain Cucumber shortly.

Ans: Cucumber is a tool that is based on Behavior Driven Development (BDD) methodology.

The main aim of Behavior Driven Development framework is to make various project roles such as Business Analysts, Quality Assurance, Developers etc., understand the application without diving deep into the technical aspects.

Q #2) What language is used by Cucumber?

Ans: Gherkin is the language that is used by the Cucumber tool. It is a simple English representation of the application behavior. Gherkin language uses several keywords to describe the behavior of application such as Feature, Scenario, Scenario Outline, Given, When, Then etc.

Q #3) What is meant by a feature file?

Ans: A feature file must provide a high-level description of an Application Under Test (AUT). The first line of the feature file must start with the keyword ‘Feature’ following the description of the application under test.

A feature file may include multiple scenarios within the same file. A feature file has the extension .feature.

Q #4) What are the various keywords that are used in Cucumber for writing a scenario?

Ans: Mentioned below are the keywords that are used for writing a scenario:

Given
When
Then
And
Q #5) What is the purpose of Scenario Outline in Cucumber?

Ans: Scenario outline is a way of parameterization of scenarios. This is ideally used when the same scenario needs to be executed for multiple sets of data, however, the test steps remain the same. Scenario Outline must be followed by the keyword ‘Examples’, which specify the set of values for each parameter.

Q #6) What programming language is used by Cucumber?

Ans: Cucumber tool provides support for multiple programming languages such as Java, .Net, Ruby etc. It can also be integrated with multiple tools such as Selenium, Capybara etc.

Q #7) What is the purpose of Step Definition file in Cucumber?

Ans: A step definition file in Cucumber is used to segregate the feature files from the underlying code. Each step of the feature file can be mapped to a corresponding method on the Step Definition file.

While feature files are written in an easily understandable language such as Gherkin, Step Definition files are written in programming languages such as Java, .Net, Ruby etc.

Q #8) What are the major advantages of Cucumber framework?

Ans: Given below are the advantages of Cucumber Gherkin framework that make Cucumber an ideal choice for rapidly evolving Agile methodology in today’s corporate world.

Cucumber is an open source tool.
Plain Text representation makes it easier for non-technical users to understand the scenarios.
It bridges the communication gap between various project stakeholders such as Business Analysts, Developers, and Quality Assurance personnel.
Automation test cases developed using the Cucumber tool are easier to maintain and understand as well.
Easy to integrate with other tools such as Selenium and Capybara.
Q #9) Provide an example of a feature file using the Cucumber framework.


Ans: Following is an Example of a feature file for the scenario ‘Login into the application’:

Feature: Login to the application under test.

Scenario: Login to the application.

Given Open Chrome browser and launch the application.
When User enters the username onto the UserName field.
And User enters the password into the Password field.
When User clicks on the Login button.
Then Validate if the user login is successful.

Q #10) Provide an example of Scenario Outline using Cucumber framework.

Ans: The following is an Example of Scenario Outline keyword for the scenario ‘Upload a file’. Number of parameter values to be included in the feature file is based on the tester’s choice.

Scenario Outline: Upload a file

Given that the user is on upload file screen.
When a user clicks on the Browse button.
And user enters <filename> onto the upload textbox.
And user clicks on the enter button.
Then verify that the file upload is successful.

Examples:

|filename|
|file1|
|file2|

Q #11) What is the purpose of Behaviour Driven Development (BDD) methodology in the real world?

Ans: BDD is a methodology to understand the functionality of an application in simple plain text representation.

The main aim of Behavior Driven Development framework is to make various project roles such as Business Analysts, Quality Assurance, Developers, Support Team understand the application without diving deep into the technical aspects.

Q #12) What is the limit for the maximum number of scenarios that can be included in the feature file?

Ans: A feature file can contain a maximum of 10 scenarios, but the number can vary from project to project and from one organization to another. But it is generally advisable to limit the number of scenarios included in the feature file.

Q #13) What is the use of Background keyword in Cucumber?

Ans: Background keyword is used to group multiple given statements into a single group. This is generally used when the same set of given statements are repeated in each scenario of the feature file.

Q #14) What symbol is used for parameterization in Cucumber?

Ans: Pipe symbol (|) is used to specify one or more parameter values in a feature file.

Q #15) What is the purpose of Examples keyword in Cucumber?

Ans: Examples keyword is used to specify values for each parameter used in the scenario. Scenario Outline keyword must always be followed by the keyword Examples.

Q #16) What is the file extension for a feature file?

Ans: File Extension for a feature file is .feature. A feature file is ideally written in a notepad file and is saved with the extension feature.

Q #17) Provide an example of step definition file in Cucumber.

Ans: Step definition corresponding to the step “Open Chrome browser and launch the application” may look like the code mentioned below:

@Given("^Open Chrome browser and launch the application$")
public void openBrowser()

{
driver = new ChromeDriver();
driver.manage().window().maximize();
driver.get("www.facebook.com");
}
Q #18) What is the purpose of Cucumber Options tag?
Ans: Cucumber Options tag is used to provide a link between the feature files and step definition files. Each step of the feature file is mapped to a corresponding method on the step definition file.

Below is the syntax of Cucumber Options tag:

@CucumberOptions(features="Features",glue={"StepDefinition"})
Q #19) How can Cucumber be integrated with Selenium WebDriver?

Ans: Cucumber can be integrated with Selenium webdriver by downloading the necessary JAR files.

Given below are the list of JAR files that are to be downloaded for using Cucumber with Selenium web driver:

cucumber-core-1.2.2.jar
cucumber-java-1.2.2.jar
cucumber-junit-1.2.2.jar
cucumber-jvm-deps-1.0.3.jar
cucumber-reporting-0.1.0.jar
gherkin-2.12.2.jar
Q #20) When is Cucumber used in real time?

Ans: Cucumber tool is generally used in real time to write acceptance tests for an application. It is generally used by non-technical people such as Business Analysts, Functional Testers etc.

Q #21) Provide an example of Background keyword in Cucumber.

Ans:

Background: Given user is on the application login page.

Q #22) What is the use of Behavior Driven Development in Agile methodology?

Ans: The advantages of Behavior Driven Development are best realized when non-technical users such as Business Analysts use BDD to draft requirements and provide the same to the developers for implementation.

In Agile methodology, user stories can be written in the format of feature file and the same can be taken up for implementation by the developers.

Q #23) Explain the purpose of keywords that are used for writing a scenario in Cucumber.

Ans: “Given” keyword is used to specify a precondition for the scenario. When a keyword is used to specify an operation to be performed. The keyword is used to specify the expected result of a performed action. “And” keyword is used to join one or more statements together into a single statement.

Q #24) What is the name of the plugin that is used to integrate Eclipse with Cucumber?

Ans: Cucumber Natural Plugin is the plugin that is used to integrate Eclipse with Cucumber.

Q #25) What is the meaning of TestRunner class in Cucumber?

Ans: TestRunner class is used to provide the link between feature file and step definition file. Below is the sample representation of how TestRunner class will look like. A TestRunner class is generally an empty class with no class definition.

Q #26) Provide an example of TestRunner class in Cucumber.

Ans:

Package com.sample.TestRunner

importorg.junit.runner.RunWith; 
importcucumber.api.CucumberOptions; 
importcucumber.api.junit.Cucumber;

@RunWith(Cucumber.class) 
@CucumberOptions(features="Features",glue={"StepDefinition"}) 
public class Runner 
{
}
Q #27) What is the starting point of execution for feature files?

Ans: When integrated with Selenium, the starting point of execution must be from TestRunner class.

Q #28) Should any code be written within TestRunner class?

Ans: No code should be written under the TestRunner class. It should include the tags @RunWith and @CucumberOptions.

Q #29) What is the use of features property under Cucumber Options tag?

Ans: Features property is used to let Cucumber framework identify the location of the feature files.

Q #30) What is the use of glue property under Cucumber Options tag?

Ans: Glue property is used to let Cucumber framework identify the location of step definition files.

Q #31) What is the maximum number of steps that are to be written within a scenario?

Ans: The maximum number of steps to be written in a scenario is 3-4 steps.

12) How many ways you findelement in webpage?
Ans. There are 8 ways to find the locator-
id,name,xpath,cssselector,tagName,className,linkTex,partialLinkText

 How do I explain Java-Selenium automation project in the interview?
We can start as mentioned below.

1. We are using Page Object with Page Factory framework with functional/structural implementation.
>> Make sure you know what is functional/structural implementation in this framework.
2. We have maintained a page class for every page in our application and a page test class to maintain test for that pages. e.g. Product listing page,Add to cart page,Payment page,Invoice generation page. 
>> Make sure you know we maintain different page and page test class and all different annotations in page factory
3. We have maintained separate package for page and page test e.g.
com.companyName.page1 com.companyName.pageTest1
>> Maintaining different packages is always a good practice to follow.
4. We also have a base page class for common functions use by all the pages.
>> Make sure you know why we have Base Page class in page object
5. We also have library package to maintain common functions related to Selenium/waits/directory creations etc
We are using JAVA/Ruby as our binding language
>> We use java because it is known to most people when we started automation.
6. We are using standardized maven project for build,execution & dependency management.
>> Make sure you know about a build tool like ant/maven
7. For handling data driven cases we are passing data using java properties file/xls file /csv file.
>> Make sure you know about libraries like openCSV,JXL/APACHE POI/Java Properties class
8. For ordering tests we are using testng framework.
>> Prepare testng questions and make sure you know how to run testng.xml using maven
9. We are using log4j library to maintain logging of our project. We are using all kinds of logging statements like INFO,DEBUG,ERROR etc. We have maintained a separate class for it in com.companyName.main package
>> Make sure you know this library usage in java, we can use log4j by mentioning properties of this framework in a xml file or a properties file and putting that file on build path.
10. We are using Extent Report for reporting purpose. It is a third party report and it is easily available at maven central repo.
We are using maven postman plugin / JAVA API to send generated extent reports as an attachment to client Distribution list.
>> Make sure you know about this plugin of maven or Java API
We checkin our code into client repository using a version controlling tool git bash on windows sytem.


Q. Used TestNG with Selenium? What are some of the annotations used?

 A. Annotations are lines of code that help in passing the configuration information. They are always preceded by @ symbol.

 @BeforeSuite : Once, before all Tests in the suite.
 @BeforeTest : Once, Prior to the first Test case in the TestNG file.
 @BeforeClass : Once before the first Test method in the current class.
 @BeforeMethod : Before each Test method.
 @Test: Actual Test case, the business logic.
 @AfterMethod : After each Test method. @AfterClass : Once after all the Test methods in the current class.
 @AfterTest : Once, after all Test cases in the TestNG file.
 @AfterSuite : Once, after all Tests in the suite.
 @BeforeGroups : The list of groups that this method will run before.
 @AfterGroups : The list of groups that this method will run after.
 @Parameters : to pass parameters in Test methods. 
 @DataProvider : Marks a method as supplying data for a Test method.
 @Factory : Marks a method as a factory that returns objects that will be used by TestNG as Test classes.
 @Listeners : Defines listeners on a Test class, helpful for logging purpose.
 
 What is the  feature of Java? 

Java is a platform independent language.

What is mean by platform independence? 

Platform independence means that we can write and compile the 
java code in one platform (eg Windows) and can execute the 
class in any other supported platform eg (Linux,Solaris,etc).

Are JVM’s platform independent?

JVM’s are not platform independent. JVM’s are platform specific run time implementation provided by the vendor.

What is a JVM?
JVM is Java Virtual Machine which is a run time environment for the compiled java class files.

What is the difference between a JDK and a JVM?
JDK is Java Development Kit which is for development purpose and it includes execution environment also. But JVM is purely a run time environment and hence you will not be able to compile your source files using a JVM.

What is a pointer and does Java support pointers? 
Pointer is a reference handle to a memory location. Improper handling of pointers leads to memory leaks and reliability issues hence Java doesn’t support the usage of pointers.

What is the base class of all classes?
java.lang.Object

Does Java support multiple inheritance?
Java doesn’t support multiple inheritance.

Is Java a pure object oriented language? 
Java uses primitive data types and hence is not a pure object oriented language.

Are arrays primitive data types? 
In Java, Arrays are objects.

What is difference between Path and Classpath? 
Path and Classpath are operating system level environment variales. Path is used define where the system can find the executables(.exe) files and classpath is used to specify the location .class files.

What are local variables? 
Local varaiables are those which are declared within a block of code like methods. Local variables should be initialised before accessing them.

What are instance variables? 
Instance variables are those which are defined at the class level. Instance variables need not be initialized before using them as they are automatically initialized to their default values.

How to define a constant variable in Java? 
The variable should be declared as static and final. So only one copy of the variable exists for all instances of the class and the value can’t be changed also.
static final int PI = 2.14; is an example for constant.

Should a main method be compulsorily declared in all java classes?
No not required. main method should be defined only if the source class is a java application.

What is the return type of the main method?
Main method doesn’t return anything hence declared void.

Why is the main method declared static?
main method is called by the JVM even before the instantiation of the class hence it is declared as static.

What is the arguement of main method?
main method accepts an array of String object as arguement.

Can a main method be overloaded? 
Yes. You can have any number of main methods with different method signature and implementation in the class.

Can a main method be declared final? 
Yes. Any inheriting class will not be able to have it’s own default main method.

Does the order of public and static declaration matter in main method?
No it doesn’t matter but void should always come before main().
Can a source file contain more than one Class declaration?
Yes a single source file can contain any number of Class declarations but only one of the class can be declared as public.

What is a package?
Package is a collection of related classes and interfaces. package declaration should be first statement in a java class.

Which package is imported by default?
java.lang package is imported by default even without a package declaration.

Can a class declared as private be accessed outside it’s package?
Not possible.
Can a class be declared as protected?
A class can’t be declared as protected. only methods can be declared as protected.

What is the access scope of a protected method?
A protected method can be accessed by the classes within the same package or by the subclasses of the class in any package.
What is the purpose of declaring a variable as final? 
A final variable’s value can’t be changed. final variables should be initialized before using them.

What is the impact of declaring a method as final? 
A method declared as final can’t be overridden. A sub-class can’t have the same method signature with a different implementation.
I don’t want my class to be inherited by any other class. What should i do? 
You should declared your class as final. But you can’t define your class as final, if it is an abstract class. A class declared as final can’t be extended by any other class.

Can you give few examples of final classes defined in Java API? 
java.lang.String,java.lang.Math are final classes.

How is final different from finally and finalize? 
final is a modifier which can be applied to a class or a method or a variable. final class can’t be inherited, final method can’t be overridden and final variable can’t be changed.
finally is an exception handling code section which gets executed whether an exception is raised or not by the try block code segment.
finalize() is a method of Object class which will be executed by the JVM just before garbage collecting object to give a final chance for resource releasing activity.

Can a class be declared as static?
No a class cannot be defined as static. Only a method,a variable or a block of code can be declared as static.

When will you define a method as static?
When a method needs to be accessed even before the creation of the object of the class then we should declare the method as static.

What are the restriction imposed on a static method or a static block of code?
A static method should not refer to instance variables without creating an instance and cannot use “this” operator to refer the instance.

I want to print “Hello” even before main is executed. How will you acheive that?
Print the statement inside a static block of code. Static blocks get executed when the class gets loaded into the memory and even before the creation of an object. Hence it will be executed before the main method. And it will be executed only once.

What is the importance of static variable?
static variables are class level variables where all objects of the class refer to the same variable. If one object changes the value then the change gets reflected in all the objects.

Can we declare a static variable inside a method? 
Static varaibles are class level variables and they can’t be declared inside a method. If declared, the class will not compile.

What is an Abstract Class and what is it’s purpose? 
A Class which doesn’t provide complete implementation is defined as an abstract class. Abstract classes enforce abstraction.

Can a abstract class be declared final? 
Not possible. An abstract class without being inherited is of no use and hence will result in compile time error.

What is use of a abstract variable? 
Variables can’t be declared as abstract. only classes and methods can be declared as abstract.

Can you create an object of an abstract class? 
Not possible. Abstract classes can’t be instantiated.

Can a abstract class be defined without any abstract methods? 
Yes it’s possible. This is basically to avoid instance creation of the class.

Class C implements Interface I containing method m1 and m2 declarations. Class C has provided implementation for method m2. Can i create an object of Class C? 
No not possible. Class C should provide implementation for all the methods in the Interface I. Since Class C didn’t provide implementation for m1 method, it has to be declared as abstract. Abstract classes can’t be instantiated.
Can a method inside a Interface be declared as final? 
No not possible. Doing so will result in compilation error. public and abstract are the only applicable modifiers for method declaration in an interface.

Can an Interface implement another Interface? 
Intefaces doesn’t provide implementation hence a interface cannot implement another interface.

Can an Interface extend another Interface? 
Yes an Interface can inherit another Interface, for that matter an Interface can extend more than one Interface.

Can a Class extend more than one Class? 
Not possible. A Class can extend only one class but can implement any number of Interfaces.
Why is an Interface be able to extend more than one Interface but 

a Class can’t extend more than one Class? 
Basically Java doesn’t allow multiple inheritance, so a Class is restricted to extend only one Class. But an Interface is a pure abstraction model and doesn’t have inheritance hierarchy like classes(do remember that the base class of all classes is Object). So an Interface is allowed to extend more than one Interface.

Can an Interface be final? 
Not possible. Doing so so will result in compilation error.

Can a class be defined inside an Interface? 
Yes it’s possible.
Can an Interface be defined inside a class? 
Yes it’s possible.

What is a Marker Interface? 
An Interface which doesn’t have any declaration inside but still enforces a mechanism.

Which OO Concept is achieved by using overloading and overriding? 
Polymorphism.

If i only change the return type, does the method become overloaded? 
No it doesn’t. There should be a change in method arguements for a method to be overloaded.

Why does Java not support operator overloading?
Operator overloading makes the code very difficult to read and maintain. To maintain code simplicity, Java doesn’t support operator overloading.

Can we define private and protected modifiers for variables in interfaces? 
No

What is Externalizable? 
Externalizable is an Interface that extends Serializable Interface. And sends data into Streams in Compressed Format. It has two methods, writeExternal(ObjectOuput out) and readExternal(ObjectInput in)

What modifiers are allowed for methods in an Interface? 
Only public and abstract modifiers are allowed for methods in interfaces.

What is a local, member and a class variable? 
Variables declared within a method are “local” variables. Variables declared within the class i.e not within any methods are “member” variables (global variables). Variables declared within the class i.e not within any methods and are defined as “static” are class variables

What is an abstract method? 
An abstract method is a method whose implementation is deferred to a subclass.
What value does read() return when it has reached the end of a file? 
The read() method returns -1 when it has reached the end of a file.
Can a Byte object be cast to a double value? 
No, an object cannot be cast to a primitive value.

What is the difference between a static and a non-static inner class? 
A non-static inner class may have object instances that are associated with instances of the class’s outer class. A static inner class does not have any object instances.
What is an object’s lock and which object’s have locks? 
An object’s lock is a mechanism that is used by multiple threads to obtain synchronized access to the object. A thread may execute a synchronized method of an object only after it has acquired the object’s lock. All objects and classes have locks. A class’s lock is acquired on the class’s Class object.

What is the % operator? 
It is referred to as the modulo or remainder operator. It returns the remainder of dividing the first operand by the second operand.
When can an object reference be cast to an interface reference? 
An object reference be cast to an interface reference when the object implements the referenced interface.
Which class is extended by all other classes? 
The Object class is extended by all other classes.

Which non-Unicode letter characters may be used as the first character of an identifier? 
The non-Unicode letter characters $ and _ may appear as the first character of an identifier
What restrictions are placed on method overloading? 
Two methods may not have the same name and argument list but different return types.

What is casting? 
There are two types of casting, casting between primitive numeric types and casting between object references. Casting between numeric types is used to convert larger values, such as double values, to smaller values, such as byte values
Casting between object references is used to refer to an object by a compatible class, interface, or array type reference.
What is the return type of a program’s main() method? 
void.

If a variable is declared as private, where may the variable be accessed? 
A private variable may only be accessed within the class in which it is declared.
What do you understand by private, protected and public? 
These are accessibility modifiers. Private is the most restrictive, while public is the least restrictive. There is no real difference between protected and the default type (also known as package protected) within the context of the same package, however the protected keyword allows visibility to a derived class in a different package.

What is Downcasting ? 
Downcasting is the casting from a general to a more specific type, i.e. casting down the hierarchy
What modifiers may be used with an inner class that is a member of an outer class?
A (non-local) inner class may be declared as public, protected, private, static, final, or abstract.

How many bits are used to represent Unicode, ASCII, UTF-16, and UTF-8 characters? 
Unicode requires 16 bits and ASCII require 7 bits. Although the ASCII character set uses only 7 bits, it is usually represented as 8 bits. UTF-8 represents characters using 8, 16, and 18 bit patterns. UTF-16 uses 16-bit and larger bit patterns.

What restrictions are placed on the location of a package statement within a source code file? 
A package statement must appear as the first line in a source code file (excluding blank lines and comments).
What is a native method? 
A native method is a method that is implemented in a language other than Java.

What are order of precedence and associativity, and how are they used? 
Order of precedence determines the order in which operators are evaluated in expressions. Associatity determines whether an expression is evaluated left-to-right or right-to-left
Can an anonymous class be declared as implementing an interface and extending a class? 
An anonymous class may implement an interface or extend a superclass, but may not be declared to do both.
What is the range of the char type? 
The range of the char type is 0 to 2^16 – 1.
What is the range of the short type? 
The range of the short type is -(2^15) to 2^15 – 1.

Why isn’t there operator overloading? 
Because C++ has proven by example that operator overloading makes code almost impossible to maintain.
What does it mean that a method or field is “static”? 
Static variables and methods are instantiated only once per class. In other words they are class variables, not instance variables. If you change the value of a static variable in a particular object, the value of that variable changes for all instances of that class. Static methods can be referenced with the name of the class rather than the name of a particular object of the class (though that works too). That’s how library methods like System.out.println() 
work. out is a static field in the java.lang.System class.

Is null a keyword? 
The null value is not a keyword.Which characters may be used as the second character of an identifier,but not as the first character of an identifier? 
The digits 0 through 9 may not be used as the first character of an identifier but they may be used after the first character of an identifier.
Is the ternary operator written x : y ? z or x ? y : z ? 
It is written x ? y : z.

How is rounding performed under integer division? 
The fractional part of the result is truncated. This is known as rounding toward zero.
If a class is declared without any access modifiers, where may the class be accessed? 
A class that is declared without any access modifiers is said to have package access. This means that the class can only be accessed by other classes and interfaces that are defined within the same package.

Does a class inherit the constructors of its superclass? 
A class does not inherit constructors from any of its superclasses.
Name the eight primitive Java types. 
The eight primitive types are byte, char, short, int, long, float, double, and boolean.

What restrictions are placed on the values of each case of a switch statement? 
During compilation, the values of each case of a switch statement must evaluate to a value that can be promoted to an int value.

What is the difference between a while statement and a do statement? 
A while statement checks at the beginning of a loop to see whether the next loop iteration should occur. A do statement checks at the end of a loop to see whether the next iteration of a loop should occur. The do statement will always execute the body of a loop at least once.

What modifiers can be used with a local inner class? 
A local inner class may be final or abstract.
When does the compiler supply a default constructor for a class? 
The compiler supplies a default constructor for a class if no other constructors are provided.

If a method is declared as protected, where may the method be accessed? 
A protected method may only be accessed by classes or interfaces of the same package or by subclasses of the class in which it is declared.

What are the legal operands of the instanceof operator? 
The left operand is an object reference or null value and the right operand is a class, interface, or array type.

Are true and false keywords? 
The values true and false are not keywords.

100.What happens when you add a double value to a String? 
The result is a String object.

101.What is the diffrence between inner class and nested class? 
When a class is defined within a scope od another class, then it becomes inner class. If the access modifier of the inner class is static, then it becomes nested class.

102.Can an abstract class be final? 
An abstract class may not be declared as final

103.What is numeric promotion? 
Numeric promotion is the conversion of a smaller numeric type to a larger numeric type, so that integer and floating-point operations may take place. In numerical promotion, byte, char, and short values are converted to int values. The int values are also converted to long values, if necessary. The long and float values are converted to double values, as required

104.What is the difference between a public and a non-public class? 
A public class may be accessed outside of its package. A non-public class may not be accessed outside of its package.

105.To what value is a variable of the boolean type automatically initialized? 
The default value of the boolean type is false

106.What is the difference between the prefix and postfix forms of the ++ operator? 
The prefix form performs the increment operation and returns the value of the increment operation. The postfix form returns the current value all of the expression and then performs the increment operation on that value.

107.What restrictions are placed on method overriding? 
Overridden methods must have the same name, argument list, and return type. The overriding method may not limit the access of the method it overrides. The overriding method may not throw any exceptions that may not be thrown by the overridden method.

108.What is a Java package and how is it used? 
A Java package is a naming context for classes and interfaces. A package is used to create a separate name space for groups of classes and interfaces. Packages are also used to organize related classes and interfaces into a single API unit and to control accessibility to these classes and interfaces.

109.What modifiers may be used with a top-level class? 
A top-level class may be public, abstract, or final.

110.What is the difference between an if statement and a switch statement? 
The if statement is used to select among two alternatives. It uses a boolean expression to decide which alternative should be executed. The switch statement is used to select among multiple alternatives. It uses an int expression to determine which alternative should be executed.

111.What are the practical benefits, if any, of importing a specific class rather than an entire package (e.g. import java.net.* versus import java.net.Socket)? 
It makes no difference in the generated class files since only the classes that are actually used are referenced by the generated class file. There is another practical benefit to importing single classes, and this arises when two (or more) packages have classes with the same name. Take java.util.Timer and javax.swing.Timer, for example. If I import java.util.* and javax.swing.* and then try to use “Timer”, I get an error while compiling (the class name is ambiguous between both packages). Let’s say what you really wanted was the javax.swing.Timer class, and the only classes you plan on using in java.util are Collection and HashMap. In this case, some people will prefer to import java.util.Collection and import java.util.HashMap instead of importing java.util.*. This will now allow them to use Timer, Collection, HashMap, and other javax.swing classes without using fully qualified class names in.

112.Can a method be overloaded based on different return type but same argument type ? No, because the methods can be called without using their return type in which case there is ambiquity for the compiler

113.What happens to a static var that is defined within a method of a class ? 
Can’t do it. You’ll get a compilation error

114.How many static init can you have ? 
As many as you want, but the static initializers and class variable initializers are executed in textual order and may not refer to class variables declared in the class whose declarations appear textually after the use, even though these class variables are in scope.

115.What is the difference between method overriding and overloading? 
Overriding is a method with the same name and arguments as in a parent, whereas overloading is the same method name but different arguments

116.What is constructor chaining and how is it achieved in Java ? 
A child object constructor always first needs to construct its parent (which in turn calls its parent constructor.). In Java it is done via an implicit call to the no-args constructor as the first statement.

117.What is the difference between the Boolean & operator and the && operator? 
If an expression involving the Boolean & operator is evaluated, both operands are evaluated. Then the & operator is applied to the operand. When an expression involving the && operator is evaluated, the first operand is evaluated. If the first operand returns a value of true then the second operand is evaluated. The && operator is then applied to the first and second operands. If the first operand evaluates to false, the evaluation of the second operand is skipped.

118.Which Java operator is right associative? 
The = operator is right associative.

119.Can a double value be cast to a byte? 
Yes, a double value can be cast to a byte.

120.What is the difference between a break statement and a continue statement? 
A break statement results in the termination of the statement to which it applies (switch, for, do, or while). A continue statement is used to end the current loop iteration and return control to the loop statement.

121.Can a for statement loop indefinitely? 
Yes, a for statement can loop indefinitely. For example, consider the following: for(;;) ;

122.To what value is a variable of the String type automatically initialized? 
The default value of an String type is null.
What is the difference between a field variable and a local variable?
A field variable is a variable that is declared as a member of a class. A local variable is a variable that is declared local to a method.

123.How are this() and super() used with constructors? 
this() is used to invoke a constructor of the same class. super() is used to invoke a superclass constructor.

124.What does it mean that a class or member is final? 
A final class cannot be inherited. A final method cannot be overridden in a subclass. A final field cannot be changed after it’s initialized, and it must include an initializer statement where it’s declared.

125.What does it mean that a method or class is abstract? An abstract class cannot be instantiated. Abstract methods may only be included in abstract classes. However, an abstract class is not required to have any abstract methods, though most of them do. Each subclass of an abstract class must override the abstract methods of its superclasses or it also should be declared abstract.


