Q1-Difference between Java Program and TestNg Script?
Ans- When we execute Java program and TestNG script then functionality wise nothing will change because our script is performing the same functionality but using TestNG you will get some additional functionality.

Some benefit of TestNG Script

1- For even single test case you will get 3 reports. These reports generated by TestNG
2-You can check execution time i.e. How much time test case has taken
3-Parallel execution  etc
--------------------------------------------------------------------------------------------------------------------------------------------------------------
Q2- How we can write TestNG Script?

Ans- To execute TestNG script we don’t have to write the separate class. We can use simple java class but here we will not write public static void main(String []args) because we are not going to execute this from JVM.

TestNG works with Annotations and annotation can be represented by @ symbol

@Test- is this the main annotation from where TestRunner will start execution.
In other words, you can say @Test in entry point
--------------------------------------------------------------------------------------------------------------------------------------------------------------
Q3-Can you tell about this , where the Test NG Program will run if not in JVM

“we will not write public static void main(String []args) because we are not going to execute this from JVM.”
Annotations of TestNG are itself a class which contains the definition of main() method due to which annotations drives compilation forward.
--------------------------------------------------------------------------------------------------------------------------------------------------------------
Q-how to run only skipped test cases in selenium web driver?
rerun test cases also can be run by testng-failed.xml file.
--------------------------------------------------------------------------------------------------------------------------------------------------------------
Q-I want to run some method in sequential order and some in parallel in testng.how would u configure the testng.xml?

In this case you can create 2 xml file. One will run in parallel and one in sequence.

you can with single xml as well but for this-You can convert all script in testng.xml file and you can trigger direct from eclipse or ant or pom.
--------------------------------------------------------------------------------------------------------------------------------------------------------------
Q1-Importance of Reporting in Selenium?

1- Reports helps you to identify the status of the test case (Pass/Fail/Skip).

2- Using reports we calculate time taken by  each test case that helps to calculate ROI(Return on Investment).

3- You can share automation reports with your team and clients as well to share the status of testing progress etc.
--------------------------------------------------------------------------------------------------------------------------------------------------------------
Q2- Does selenium support report generation?

Ans- No Selenium will only help you to automate your web application. If you want to generate reports then we can use Third party tools that we can integrate and can generate reports.

Here TestNG comes into the picture.
--------------------------------------------------------------------------------------------------------------------------------------------------------------
Q3- Do we need to write some script or any additional code for reports?
Ans- No we do not have to write any additional code for report generation. We need to refresh our project and we will get 1 additional folder (default suite) inside that folder we will get all the reports. but you can with ExtentReport with as well.
--------------------------------------------------------------------------------------------------------------------------------------------------------------
One good feature about TestNG for every test case it creates 3 different type of reports.
refresh and you will get 3 reports-
index.html
Default test.html
emailable-report.html
--------------------------------------------------------------------------------------------------------------------------------------------------------------
Q-How to create a report for Selenium Parallel Test execution.

I have two test in testng.xml file. Each test calls 50methods(@Test).
One test runs in chrome browser and another one runs in firefox browser.
Which one is the best report generation tool and how can i achieve it.

In this case,You can continue with default testng report.
--------------------------------------------------------------------------------------------------------------------------------------------------------------
What is Cross browser testing?
Cross browser, testing refers to testing the application in multiple browsers like IE, Chrome, Firefox so that we can test our application effectively.
Example- Suppose if you have 20 test cases that you have to execute manually, so it is not a big deal right we can execute in 1 day or 2 days. However, if the same test cases you have to execute in five browsers it means 100 test cases then probably you will take one week or more than one week to do the same and it will be quite boring as well.

public class TestCase1 {
 
@Test
// Here this parameters we will take from testng.xml
@Parameters("Browser")
public  void test1(String browser) {
 
if(browser.equalsIgnoreCase("FF")){
 
WebDriver driver=new FirefoxDriver();
 
driver.manage().window().maximize();
 
driver.get("http://www.facebook.com");
 
driver.quit();
 
}
else if(browser.equalsIgnoreCase("IE")){
 
System.setProperty("webdriver.ie.driver", "./server/IEDriverServer.exe");
 
WebDriver driver=new InternetExplorerDriver();
 
driver.manage().window().maximize();
 
driver.get("http://www.facebook.com");
 
driver.quit();
}
}
}


<suite name="Suite" parallel="tests" thread-count="2">
 
<test name="Test">
 
<parameter name="Browser" value="FF" />
 
<classes>
 
<class name="SampleTestcases.TestCase1"/>
 
</classes>
 
</test>
 
<test name="Test1">
 
<parameter name="Browser" value="IE" />
 
<classes>
 
<class name="SampleTestcases.TestCase1"/>
 
</classes>
 
</test>
 
</suite>
--------------------------------------------------------------------------------------------------------------------------------------------------------------

3rd party broswer is faster than firefox
--------------------------------------------------------------------------------------------------------------------------------------------------------------
Note- Your script can fail due to so many reasons some of them are

1- Some locator has been changed in application because the application is getting new feature- so in this case you need to modify your script in other words you have to refine your script.

You can not avoid maintenance of test script you always have to maintain your scripts

2- Either functionality has been broken- in this case, you have to raise a defect and assign to the respective person.

Why test fail ?
Application issue/down
Server is not responding
Network issue
Scripting issue
--------------------------------------------------------------------------------------------------------------------------------------------------------------
How to run failed TC ?
test output-suitname-TestNG wil generate testng-failed.xml- you can run this one only
 
OR

Consider you have 10 test cases in Selenium and  you have created a testng.xml to execute all test cases.

Now you create another 20 test cases which belong to the same project but they belong to different module so again we created testng1.xml for the same.

If the same process goes on then at last you must be having couple of xml files which will  be having all the testcases.

Now the real problem is if you want to execute all xml in one shot then you can not do because Eclipse will allow to execute only one xml.

In this case we can take help of an TestNG class which allow us to execute multiple xml in one shot.


public class TestRunner {

	public static void main(String[] args) {

		TestNG runner = new TestNG();
		List<String> list = new ArrayList<String>();
		list.add("D:\\SELENIUM\\Selenium_Project\\Selenium\\Selenium\\test-output\\Default suite\\testng-failed.xml");

		runner.setTestSuites(list);
		runner.run();
	}
}
--------------------------------------------------------------------------------------------------------------------------------------------------------------
Log-
The Reporter is a separate class in TestNG that is available under org.testng package.

public class ReporterDemo {
    
    @Test
    public void testReport(){
        
        WebDriver driver=new FirefoxDriver();
        
        Reporter.log("Browser Opened");
        
        driver.manage().window().maximize();
        
        Reporter.log("Browser Maximized");
        
        driver.get("http://www.google.com");
        
        Reporter.log("Application started");
        
        driver.quit();
        
        Reporter.log("Application closed");
        
    }
 
}

but Extentreport have a inbuilt feature so you can use that one as well(better to use Extentreport)
--------------------------------------------------------------------------------------------------------------------------------------------------------------
Q-How to disable Selenium Testcases using TestNG Feature ?
Ok so let’s consider a scenario that you have written 10 testcases but now you want to execute only 5 testcase because other 5 are working correctly

@Test(enabled=false)
--------------------------------------------------------------------------------------------------------------------------------------------------------------
I got a case..For suppose i have 100 test cases,in that 100 i want to execute only 20 test cases.Is there any way to skip the 80 test cases,rather using enable=false,for all the 80 test cases.. Please provide the solution.
Grouping of test case will work for you.

Create group of test cases then decide which group to run which do not has to run via XML file(testng.xml).
--------------------------------------------------------------------------------------------------------------------------------------------------------------
Best and easy way to Group test cases in selenium
For Example- If we  have 200 test case out of these some are end to end test cases, some are the functional test case and some are regression or smoke test cases so if you don’t categorize these test cases these all test case will come under one common category.
 @Test(groups={"Smoke"})
  @Test(groups={"group1","group2"})
After grouping in Selenium we can specify the include and exclude in testng.xml.

<include> – It tells testng.xml that which group we need to execute.

<exclude>- It tells testng.xml which group we have to Skip

public class TestGroupDemo {
 
    
    @Test(groups={"Smoke"})
    public void login(){
        
        System.out.println("Login done");
        System.out.println("Smoke Scenario passed");
    }
    
    @Test(groups={"Regression"})
    public void register(){
        System.out.println("Registration done");
    }
    
    
    
}

<suite name="Suite" parallel="none">
  <test name="Test">
    <groups>
     
       <run>
            
            <include name="Smoke" />
            <exclude name="Regression"/>
             
       </run>
     
    </groups>
    <classes>
      <class name="testngDemo.TestGroupDemo"/>
    </classes>
  </test> <!-- Test -->
</suite> <!-- Suite -->
--------------------------------------------------------------------------------------------------------------------------------------------------------------
Can we group the different methods from different classes and run them together.
Let suppose: We have 3 classes and in each class we have 3 methods. So can we group as: 2 methods from class 1, 2 method from class 2 and 1 methods from class 3?
Ans-Yes
--------------------------------------------------------------------------------------------------------------------------------------------------------------
Dependency
@Test(dependsOnMethods={"loginTestCase"})

public class TestMultiple {
 
@Test
public void testLogin()
{
 
System.out.println("login done");
 
}
 
@Test(dependsOnMethods={"testLogin"})
public void testAccount()
{
System.out.println("Account has been created");
 
}
 
@Test(dependsOnMethods={"testLogin","testAccount"})
public void testLogout()
{
System.out.println("logout");
 
}
 
}
but if testLogin will fail due to some error or exception the testAccount will not be executed and this test case will skip and testLogout is dependent on testLogin and testAccount so now this will also come into skipped category
--------------------------------------------------------------------------------------------------------------------------------------------------------------
Benefits of Running parallel execution in selenium

It saves execution effort.
We can cover a number of tests.
We can perform cross-browser testing as well which will make the application more stable.
If you are running scripts parallelly then it will help you to increase ROI  (return of Investment)

We need to understand some topics before proceeding further.

TestNG internally handles threading concepts which will allow us to run the test in multiple threads.
Each thread will be assigned to individual test so if you have fewer threads than Test will get same thread if free.
You need to separate machine for parallel execution or machine with good resources which can handle multiple browsers at one time.

Thread count

You need to also consider thread-count in TestNG which will create threads based on our requirement.

I have some use case which will make your concept clearer.

Scenario 1- If you have three test cases and thread count is only 1 then the single thread will execute all test which is of no use.

Scenario 2- If you have three test cases and thread count is two then you will notice parallel execution because one thread will execute one test and one thread will execute two.

Scenario 3- If you have three test cases and thread count is three then each thread will execute an individual test and you will notice execution time will be less.
--------------------------------------------------------------------------------------------------------------------------------------------------------------

Listeners-allow to customize your Logs and report of TestNG
Listen to certain event and behave accordingly
ItestListner-class level, suite level

--------------------------------------------------------------------------------------------------------------------------------------------------------------
there are 5 ways of logging now i have learned so far from the site.
Can you please correct me if i am wrong somewhere or anything to be added. Its like a summary
1) Reporter.log
A simple print statement
2) testNG
The most easiest way since you just have to extend the interface and you get advance logging
3) WebDriverEventliStener
This a little complex since you have yo create 2 classes . One extending other class and use different object than driver but logging details are very good liked
you click on which link, you navigated where
4) Log4j
external library, it has 4 different things under it and has its own syntax and classes
5) Extent report
--------------------------------------------------------------------------------------------------------------------------------------------------------------

DDF-framwork driven by data.
when one test case has to excute with different set of data